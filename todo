
= who am I? =

- cowboy shirts
- cowboy town
- not a cowboy.

- adx, thoughtworks, drw, c42
- rubymonk.com
- yes, clojuremonk.com is forthcoming
- clojure apps at drw

= intro =

- have you tried clojure? (hands)
- have you read about clojure? (hands)
- have you read/done SICP? x'ed schemer? other lisp books? (hands)
- do you believe (= closures objects)?
  - or that they're equivalent?
  - come back to this.

= history / why lisp? =

- lisp, language of ai
  - what does clojure look like?
  - homoiconicity: data structures, code, generating code
  - peter seibel's book
- gc, lisp one of the first
- literature: sicp, reasoned schemer, lisp in small pieces, etc.
- concurrency is the new memory management
  - facebook timeline, git, migrations, computers/clocks, etc.
  - multicore is a reality
  - clojure STM types, giant icons
  - wrapping Java's java.util.concurrency (cgrand's example)
  - immutability is great for healthy teeth

* 5:00pm
+ 5:30pm

= curiosity is fun =

- rails users in the crowd?
- rails console
- repl
- overtone
- get everyone to install lein? lein-swank?

* 6:00pm

= we like things that feel good =

- ruby is like this the first time
- Christopher Alexander (timeless way quote)
- _why quote about taste vs. creating
  - what about taste in creation?
  - UIs (2 examples for comparison?)

* 6:00pm

= homoiconicity =

- eval doesn't suck
- homoiconicity
- macros
- homoiconicity

- data structures as libs (declarative code, hiccup, vs. rails macros)
  - avoiding ESC
- homoiconicity
- libs as language features (core.match demo)
- homoiconicity

- data structures -> fns -> macros -> compilers

- parens aren't evil when they're used correctly (oracle db conn string)
- edit the way you think about code (emacs demo)
- homoiconicity
- maybe this section is about editing sexps?
- ruby's grammar graph, ruby's textual layout (java's)
- vi for ruby, emacs for clojure. why? [gaz]

* 7:00pm

= what about my sweet, sweet objects? =

- making your own object model
  - doug hoyte's let-over-lambda (clojure example)
- maps: ruby hash => object pattern
- keys/maps, examples (hashes, PAN card #, SIN, json, mongodb)
  - we like one-step table lookups.
  - airindia: if I need ALL my information to check in at a kiosk, I AM THE KEY
- creating protocols, if you must.
- creating java interfaces, if you must.
- why do you want objects so badly?
  - encapsulation
  - type-based dispatch (polymorphism, OOP, case/if-statements)
  - a place to put things

* 8:00pm

= current state of the world =

- java interop example
- jruby interop issues

- coffeescript vs. clojurescript demo

- out-of-the-box on heroku, but few other places
- lein is no match for rake, show how
